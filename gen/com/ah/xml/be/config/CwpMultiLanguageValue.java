//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.07.01 at 11:29:17 AM CST 
//


package com.ah.xml.be.config;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for cwp-multi-language-value.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="cwp-multi-language-value">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="chinese-simple"/>
 *     &lt;enumeration value="chinese-traditional"/>
 *     &lt;enumeration value="dutch"/>
 *     &lt;enumeration value="english"/>
 *     &lt;enumeration value="french"/>
 *     &lt;enumeration value="german"/>
 *     &lt;enumeration value="korean"/>
 *     &lt;enumeration value="spanish"/>
 *     &lt;enumeration value="italian"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "cwp-multi-language-value", namespace = "http://www.aerohive.com/configuration/ssid")
@XmlEnum
public enum CwpMultiLanguageValue {

    @XmlEnumValue("chinese-simple")
    CHINESE_SIMPLE("chinese-simple"),
    @XmlEnumValue("chinese-traditional")
    CHINESE_TRADITIONAL("chinese-traditional"),
    @XmlEnumValue("dutch")
    DUTCH("dutch"),
    @XmlEnumValue("english")
    ENGLISH("english"),
    @XmlEnumValue("french")
    FRENCH("french"),
    @XmlEnumValue("german")
    GERMAN("german"),
    @XmlEnumValue("korean")
    KOREAN("korean"),
    @XmlEnumValue("spanish")
    SPANISH("spanish"),
    @XmlEnumValue("italian")
    ITALIAN("italian");
    private final String value;

    CwpMultiLanguageValue(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static CwpMultiLanguageValue fromValue(String v) {
        for (CwpMultiLanguageValue c: CwpMultiLanguageValue.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
