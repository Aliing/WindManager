//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.07.01 at 11:29:17 AM CST 
//


package com.ah.xml.be.config;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for logging-level-value.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="logging-level-value">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="alert"/>
 *     &lt;enumeration value="critical"/>
 *     &lt;enumeration value="debug"/>
 *     &lt;enumeration value="emergency"/>
 *     &lt;enumeration value="error"/>
 *     &lt;enumeration value="info"/>
 *     &lt;enumeration value="notification"/>
 *     &lt;enumeration value="warning"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "logging-level-value", namespace = "http://www.aerohive.com/configuration/logging")
@XmlEnum
public enum LoggingLevelValue {

    @XmlEnumValue("alert")
    ALERT("alert"),
    @XmlEnumValue("critical")
    CRITICAL("critical"),
    @XmlEnumValue("debug")
    DEBUG("debug"),
    @XmlEnumValue("emergency")
    EMERGENCY("emergency"),
    @XmlEnumValue("error")
    ERROR("error"),
    @XmlEnumValue("info")
    INFO("info"),
    @XmlEnumValue("notification")
    NOTIFICATION("notification"),
    @XmlEnumValue("warning")
    WARNING("warning");
    private final String value;

    LoggingLevelValue(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static LoggingLevelValue fromValue(String v) {
        for (LoggingLevelValue c: LoggingLevelValue.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
