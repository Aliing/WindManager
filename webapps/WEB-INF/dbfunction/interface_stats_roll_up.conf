drop FUNCTION if exists f_interface_stats_roll_up(statusTime bigint);
CREATE OR REPLACE FUNCTION f_interface_stats_roll_up(statusTime bigint)
  RETURNS boolean AS
 $BODY$ 
 declare 
 sql varchar;
 r record;
 eFlg boolean :=false;
 c_apmac varchar :='';
 c_apname varchar :='';
 c_crcerrorrate smallint :=0;
 c_interferenceutilization smallint :=0;
 c_noisefloor smallint :=0;
 c_rxairtime smallint :=0;
 c_rxbytecount bigint :=0;
 c_rxdrops bigint :=0;
 c_rxretryrate smallint:=0;
 c_rxutilization smallint :=0;
 c_timestamp bigint :=0;
 c_totalchannelutilization smallint :=0;
 c_txairtime smallint :=0;
 c_txbytecount bigint :=0;
 c_txdrops bigint :=0;
 c_txretryrate smallint :=0;
 c_txutilization smallint :=0;
 c_ifname varchar :='';
 c_radioType smallint :=0;
 c_unitxframecount bigint :=0;
 c_unirxframecount bigint :=0;
 c_owner bigint :=0;
 
 clastTime bigint :=0;
 begin
	-- roll up hour table from min table, calculate the last time from hour table
	select into clastTime timestamp from hm_interface_stats_hour order by timestamp desc limit 1;

	if clastTime is null or clastTime = 0 then 
		sql := 'select * from hm_interface_stats where timestamp<= ' || statusTime || ' and timestamp> ' || statusTime-604800000 || ' order by owner, apmac, radioType,timestamp asc';
	else 
		sql := 'select * from hm_interface_stats where timestamp<= ' || statusTime || ' and timestamp> ' || clastTime || ' order by owner, apmac, radioType, timestamp asc';
	end if;

	for r in execute sql loop
		if eFlg=false then
			c_apname:=r.apname;
			c_apmac:=r.apmac;
			c_crcerrorrate:=r.crcerrorrate;
			c_interferenceutilization:=r.interferenceutilization;
			c_noisefloor:=r.noisefloor;
			c_rxairtime:=r.rxairtime;
			c_rxbytecount:=r.rxbytecount;
			c_rxdrops:=r.rxdrops;
			c_rxretryrate:=r.rxretryrate;
			c_rxutilization:=r.rxutilization;
			if (r.timestamp%3600000=0) then
				c_timestamp := r.timestamp;
			else 
				c_timestamp := r.timestamp/3600000 * 3600000 + 3600000;
			end if;
			c_totalchannelutilization:=r.totalchannelutilization;
			c_txairtime:=r.txairtime;
			c_txbytecount:=r.txbytecount;
			c_txdrops:=r.txdrops;
			c_txretryrate:=r.txretryrate;
			c_txutilization:=r.txutilization;
			c_unitxframecount:=r.unitxframecount;
			c_unirxframecount:=r.unirxframecount;
			c_ifname:=r.ifname;
			c_radioType:=r.radioType;
			c_owner:=r.owner;
			eFlg:=true;
			continue;
		end if;

		if c_owner!= r.owner or c_apmac!= r.apmac or c_radioType!=r.radioType or (r.timestamp - c_timestamp) >0 then
			insert into hm_interface_stats_hour (apmac,apname,ifname,radioType,crcerrorrate,interferenceutilization,noisefloor,rxairtime,
				rxbytecount,rxdrops,rxretryrate,rxutilization,timestamp,totalchannelutilization,txairtime,txbytecount,txdrops,txretryrate,txutilization,unitxframecount,unirxframecount,owner)
				values(c_apmac,c_apname,c_ifname,c_radioType,c_crcerrorrate,c_interferenceutilization,c_noisefloor,c_rxairtime,
				c_rxbytecount,c_rxdrops,c_rxretryrate,c_rxutilization,c_timestamp,
				c_totalchannelutilization,c_txairtime,c_txbytecount,c_txdrops,c_txretryrate,c_txutilization,c_unitxframecount,c_unirxframecount,c_owner);
			c_apname:=r.apname;
			c_apmac:=r.apmac;
			c_crcerrorrate:=r.crcerrorrate;
			c_interferenceutilization:=r.interferenceutilization;
			c_noisefloor:=r.noisefloor;
			c_rxairtime:=r.rxairtime;
			c_rxbytecount:=r.rxbytecount;
			c_rxdrops:=r.rxdrops;
			c_rxretryrate:=r.rxretryrate;
			c_rxutilization:=r.rxutilization;
			if (r.timestamp%3600000=0) then
				c_timestamp := r.timestamp;
			else 
				c_timestamp := r.timestamp/3600000 * 3600000 + 3600000;
			end if;
			c_totalchannelutilization:=r.totalchannelutilization;
			c_txairtime:=r.txairtime;
			c_txbytecount:=r.txbytecount;
			c_txdrops:=r.txdrops;
			c_txretryrate:=r.txretryrate;
			c_txutilization:=r.txutilization;
			c_ifname:=r.ifname;
			c_radioType:=r.radioType;
			c_unitxframecount:=r.unitxframecount;
			c_unirxframecount:=r.unirxframecount;
			c_owner:=r.owner;
			continue;
		end if;
		if (r.crcerrorrate>c_crcerrorrate) then 
			c_crcerrorrate := r.crcerrorrate;
		end if;
		if (r.interferenceutilization>c_interferenceutilization) then
			c_interferenceutilization:=r.interferenceutilization;
		end if;
		if (r.noisefloor>c_noisefloor) then
			c_noisefloor:=r.noisefloor;
		end if;
		if (r.rxairtime>c_rxairtime) then
			c_rxairtime:=r.rxairtime;
		end if;
		c_rxbytecount:=r.rxbytecount + c_rxbytecount;
		c_rxdrops:=r.rxdrops + c_rxdrops;
		if (r.rxretryrate>c_rxretryrate) then
			c_rxretryrate:=r.rxretryrate;
		end if;
		if (r.rxutilization>c_rxutilization) then
			c_rxutilization:=r.rxutilization;
		end if;
		if (r.totalchannelutilization>c_totalchannelutilization) then
			c_totalchannelutilization:=r.totalchannelutilization;
		end if;
		if (r.txairtime>c_txairtime) then
			c_txairtime:=r.txairtime;
		end if;
		c_txbytecount:=r.txbytecount + c_txbytecount;
		c_txdrops:=r.txdrops + c_txdrops;
		if (r.txretryrate>c_txretryrate) then
			c_txretryrate:=r.txretryrate;
		end if;
		if (r.txutilization>c_txutilization) then
			c_txutilization:=r.txutilization;
		end if;
		c_unitxframecount:=c_unitxframecount + r.unitxframecount;
		c_unirxframecount:=c_unirxframecount + r.unirxframecount;
	end loop;

	if eFlg=true then
		insert into hm_interface_stats_hour (apmac,apname,ifname,radioType,crcerrorrate,interferenceutilization,noisefloor,rxairtime,
			rxbytecount,rxdrops,rxretryrate,rxutilization,timestamp,totalchannelutilization,txairtime,txbytecount,txdrops,txretryrate,txutilization,unitxframecount,unirxframecount,owner)
			values(c_apmac,c_apname,c_ifname,c_radioType,c_crcerrorrate,c_interferenceutilization,c_noisefloor,c_rxairtime,
			c_rxbytecount,c_rxdrops,c_rxretryrate,c_rxutilization,c_timestamp,
			c_totalchannelutilization,c_txairtime,c_txbytecount,c_txdrops,c_txretryrate,c_txutilization,c_unitxframecount,c_unirxframecount,c_owner);
	end if;

	-- roll up day table from hour table, calculate the last time from day table
	-- if the time is 0 clock.
	-- 3600000 * 24 
	if statusTime%(86400000) =0 then
	
		eFlg:= false;
		
		select into clastTime timestamp from hm_interface_stats_day order by timestamp desc limit 1;

		if clastTime is null or clastTime = 0 then 
			-- sql := 'select * from hm_interface_stats_hour where timestamp< ' || statusTime || ' and timestamp>= ' || statusTime-3600000 * 24 * 7 || ' order by owner, apmac, timestamp';
			sql := 'select * from hm_interface_stats_hour where timestamp<= ' || statusTime || ' and timestamp> ' || statusTime-604800000 || ' order by owner, apmac, radioType, timestamp asc';
		else 
			sql := 'select * from hm_interface_stats_hour where timestamp<= ' || statusTime || ' and timestamp> ' || clastTime || ' order by owner, apmac, radioType, timestamp asc';
		end if;

		for r in execute sql loop
			if eFlg=false then
				c_apname:=r.apname;
				c_apmac:=r.apmac;
				c_crcerrorrate:=r.crcerrorrate;
				c_interferenceutilization:=r.interferenceutilization;
				c_noisefloor:=r.noisefloor;
				c_rxairtime:=r.rxairtime;
				c_rxbytecount:=r.rxbytecount;
				c_rxdrops:=r.rxdrops;
				c_rxretryrate:=r.rxretryrate;
				c_rxutilization:=r.rxutilization;
				-- 3600000 * 24
				if (r.timestamp%86400000=0) then
					c_timestamp := r.timestamp;
				else 
					c_timestamp := r.timestamp/(86400000) * 86400000 + 86400000;
				end if;
				c_totalchannelutilization:=r.totalchannelutilization;
				c_txairtime:=r.txairtime;
				c_txbytecount:=r.txbytecount;
				c_txdrops:=r.txdrops;
				c_txretryrate:=r.txretryrate;
				c_txutilization:=r.txutilization;
				c_ifname:=r.ifname;
				c_radioType:=r.radioType;
				c_unitxframecount:=r.unitxframecount;
				c_unirxframecount:=r.unirxframecount;
				c_owner:=r.owner;
				eFlg:=true;
				continue;
			end if;
			if c_owner!= r.owner or c_apmac!= r.apmac or c_radioType!=r.radioType or (r.timestamp - c_timestamp) >0 then
				insert into hm_interface_stats_day (apmac,apname,ifname,radioType,crcerrorrate,interferenceutilization,noisefloor,rxairtime,
					rxbytecount,rxdrops,rxretryrate,rxutilization,timestamp,totalchannelutilization,txairtime,txbytecount,txdrops,txretryrate,txutilization,unitxframecount,unirxframecount,owner)
					values(c_apmac,c_apname,c_ifname,c_radioType, c_crcerrorrate,c_interferenceutilization,c_noisefloor,c_rxairtime,
					c_rxbytecount,c_rxdrops,c_rxretryrate,c_rxutilization,c_timestamp,
					c_totalchannelutilization,c_txairtime,c_txbytecount,c_txdrops,c_txretryrate,c_txutilization,c_unitxframecount,c_unirxframecount,c_owner);
				c_apname:=r.apname;
				c_apmac:=r.apmac;
				c_crcerrorrate:=r.crcerrorrate;
				c_interferenceutilization:=r.interferenceutilization;
				c_noisefloor:=r.noisefloor;
				c_rxairtime:=r.rxairtime;
				c_rxbytecount:=r.rxbytecount;
				c_rxdrops:=r.rxdrops;
				c_rxretryrate:=r.rxretryrate;
				c_rxutilization:=r.rxutilization;
				-- 3600000 * 24
				if (r.timestamp%86400000=0) then
					c_timestamp := r.timestamp;
				else 
					c_timestamp := r.timestamp/(86400000) * 86400000 + 86400000;
				end if;
				c_totalchannelutilization:=r.totalchannelutilization;
				c_txairtime:=r.txairtime;
				c_txbytecount:=r.txbytecount;
				c_txdrops:=r.txdrops;
				c_txretryrate:=r.txretryrate;
				c_txutilization:=r.txutilization;
				c_ifname:=r.ifname;
				c_radioType:=r.radioType;
				c_unitxframecount:=r.unitxframecount;
				c_unirxframecount:=r.unirxframecount;
				c_owner:=r.owner;
				continue;
			end if;
			if (r.crcerrorrate>c_crcerrorrate) then 
				c_crcerrorrate := r.crcerrorrate;
			end if;
			if (r.interferenceutilization>c_interferenceutilization) then
				c_interferenceutilization:=r.interferenceutilization;
			end if;
			if (r.noisefloor>c_noisefloor) then
				c_noisefloor:=r.noisefloor;
			end if;
			if (r.rxairtime>c_rxairtime) then
				c_rxairtime:=r.rxairtime;
			end if;
			c_rxbytecount:=r.rxbytecount + c_rxbytecount;
			c_rxdrops:=r.rxdrops + c_rxdrops;
			if (r.rxretryrate>c_rxretryrate) then
				c_rxretryrate:=r.rxretryrate;
			end if;
			if (r.rxutilization>c_rxutilization) then
				c_rxutilization:=r.rxutilization;
			end if;
			if (r.totalchannelutilization>c_totalchannelutilization) then
				c_totalchannelutilization:=r.totalchannelutilization;
			end if;
			if (r.txairtime>c_txairtime) then
				c_txairtime:=r.txairtime;
			end if;
			c_txbytecount:=r.txbytecount + c_txbytecount;
			c_txdrops:=r.txdrops + c_txdrops;
			if (r.txretryrate>c_txretryrate) then
				c_txretryrate:=r.txretryrate;
			end if;
			if (r.txutilization>c_txutilization) then
				c_txutilization:=r.txutilization;
			end if;
			c_unitxframecount:=c_unitxframecount + r.unitxframecount;
			c_unirxframecount:=c_unirxframecount + r.unirxframecount;
		end loop;

		if eFlg=true then
			insert into hm_interface_stats_day (apmac,apname,ifname,radioType,crcerrorrate,interferenceutilization,noisefloor,rxairtime,
				rxbytecount,rxdrops,rxretryrate,rxutilization,timestamp,totalchannelutilization,txairtime,txbytecount,txdrops,txretryrate,txutilization,unitxframecount,unirxframecount,owner)
				values(c_apmac,c_apname,c_ifname,c_radioType,c_crcerrorrate,c_interferenceutilization,c_noisefloor,c_rxairtime,
				c_rxbytecount,c_rxdrops,c_rxretryrate,c_rxutilization,c_timestamp,
				c_totalchannelutilization,c_txairtime,c_txbytecount,c_txdrops,c_txretryrate,c_txutilization,c_unitxframecount,c_unirxframecount,c_owner);
		end if;
	end if;

	-- roll up week table from day table, calculate the last time from week table
	-- if the time is 0 clock.
	-- 604800000 = 3600000* 24 * 7
	if statusTime % (604800000) = 259200000 then

		eFlg:= false;
		
		select into clastTime timestamp from hm_interface_stats_week order by timestamp desc limit 1;

		if clastTime is null or clastTime = 0 then 
			sql := 'select * from hm_interface_stats_day where timestamp<= ' || statusTime || ' and timestamp> ' || statusTime-7776000000 || ' order by owner, apmac, radioType,timestamp asc';

			--sql := 'select * from hm_interface_stats_day where timestamp<= ' || statusTime || ' and timestamp> ' || statusTime-3600000 * 24 * 90 || ' order by owner, apmac, timestamp';
		else 
			sql := 'select * from hm_interface_stats_day where timestamp<= ' || statusTime || ' and timestamp> ' || clastTime || ' order by owner, apmac, radioType,timestamp asc';
		end if;

		for r in execute sql loop
			if eFlg=false then
				c_apname:=r.apname;
				c_apmac:=r.apmac;
				c_crcerrorrate:=r.crcerrorrate;
				c_interferenceutilization:=r.interferenceutilization;
				c_noisefloor:=r.noisefloor;
				c_rxairtime:=r.rxairtime;
				c_rxbytecount:=r.rxbytecount;
				c_rxdrops:=r.rxdrops;
				c_rxretryrate:=r.rxretryrate;
				c_rxutilization:=r.rxutilization;
				if (r.timestamp%(604800000)<=259200000) then
					c_timestamp := r.timestamp /604800000 * 604800000 + 259200000;
				else 
					c_timestamp := r.timestamp /604800000 * 604800000 + 604800000 + 259200000;
				end if;
				c_totalchannelutilization:=r.totalchannelutilization;
				c_txairtime:=r.txairtime;
				c_txbytecount:=r.txbytecount;
				c_txdrops:=r.txdrops;
				c_txretryrate:=r.txretryrate;
				c_txutilization:=r.txutilization;
				c_ifname:=r.ifname;
				c_radioType:=r.radioType;
				c_unitxframecount:=r.unitxframecount;
				c_unirxframecount:=r.unirxframecount;
				c_owner:=r.owner;
				eFlg:=true;
				continue;
			end if;
			if c_owner!= r.owner or c_apmac!= r.apmac or c_radioType!=r.radioType or (r.timestamp - c_timestamp) >0 then
				insert into hm_interface_stats_week (apmac,apname,ifname,radioType,crcerrorrate,interferenceutilization,noisefloor,rxairtime,
					rxbytecount,rxdrops,rxretryrate,rxutilization,timestamp,totalchannelutilization,txairtime,txbytecount,txdrops,txretryrate,txutilization,unitxframecount,unirxframecount,owner)
					values(c_apmac,c_apname,c_ifname,c_radioType,c_crcerrorrate,c_interferenceutilization,c_noisefloor,c_rxairtime,
					c_rxbytecount,c_rxdrops,c_rxretryrate,c_rxutilization,c_timestamp,
					c_totalchannelutilization,c_txairtime,c_txbytecount,c_txdrops,c_txretryrate,c_txutilization,c_unitxframecount,c_unirxframecount,c_owner);
				c_apname:=r.apname;
				c_apmac:=r.apmac;
				c_crcerrorrate:=r.crcerrorrate;
				c_interferenceutilization:=r.interferenceutilization;
				c_noisefloor:=r.noisefloor;
				c_rxairtime:=r.rxairtime;
				c_rxbytecount:=r.rxbytecount;
				c_rxdrops:=r.rxdrops;
				c_rxretryrate:=r.rxretryrate;
				c_rxutilization:=r.rxutilization;
				if (r.timestamp%(604800000)<=259200000) then
					c_timestamp := r.timestamp /604800000 * 604800000 + 259200000;
				else 
					c_timestamp := r.timestamp /604800000 * 604800000 + 604800000 + 259200000;
				end if;
				c_totalchannelutilization:=r.totalchannelutilization;
				c_txairtime:=r.txairtime;
				c_txbytecount:=r.txbytecount;
				c_txdrops:=r.txdrops;
				c_txretryrate:=r.txretryrate;
				c_txutilization:=r.txutilization;
				c_ifname:=r.ifname;
				c_radioType:=r.radioType;
				c_unitxframecount:=r.unitxframecount;
				c_unirxframecount:=r.unirxframecount;
				c_owner:=r.owner;
				continue;
			end if;
			if (r.crcerrorrate>c_crcerrorrate) then 
				c_crcerrorrate := r.crcerrorrate;
			end if;
			if (r.interferenceutilization>c_interferenceutilization) then
				c_interferenceutilization:=r.interferenceutilization;
			end if;
			if (r.noisefloor>c_noisefloor) then
				c_noisefloor:=r.noisefloor;
			end if;
			if (r.rxairtime>c_rxairtime) then
				c_rxairtime:=r.rxairtime;
			end if;
			c_rxbytecount:=r.rxbytecount + c_rxbytecount;
			c_rxdrops:=r.rxdrops + c_rxdrops;
			if (r.rxretryrate>c_rxretryrate) then
				c_rxretryrate:=r.rxretryrate;
			end if;
			if (r.rxutilization>c_rxutilization) then
				c_rxutilization:=r.rxutilization;
			end if;
			if (r.totalchannelutilization>c_totalchannelutilization) then
				c_totalchannelutilization:=r.totalchannelutilization;
			end if;
			if (r.txairtime>c_txairtime) then
				c_txairtime:=r.txairtime;
			end if;
			c_txbytecount:=r.txbytecount + c_txbytecount;
			c_txdrops:=r.txdrops + c_txdrops;
			if (r.txretryrate>c_txretryrate) then
				c_txretryrate:=r.txretryrate;
			end if;
			if (r.txutilization>c_txutilization) then
				c_txutilization:=r.txutilization;
			end if;
			c_unitxframecount:=c_unitxframecount + r.unitxframecount;
			c_unirxframecount:=c_unirxframecount + r.unirxframecount;
		end loop;

		if eFlg=true then
			insert into hm_interface_stats_week (apmac,apname,ifname,radioType,crcerrorrate,interferenceutilization,noisefloor,rxairtime,
				rxbytecount,rxdrops,rxretryrate,rxutilization,timestamp,totalchannelutilization,txairtime,txbytecount,txdrops,txretryrate,txutilization,unitxframecount,unirxframecount,owner)
				values(c_apmac,c_apname,c_ifname,c_radioType,c_crcerrorrate,c_interferenceutilization,c_noisefloor,c_rxairtime,
				c_rxbytecount,c_rxdrops,c_rxretryrate,c_rxutilization,c_timestamp,
				c_totalchannelutilization,c_txairtime,c_txbytecount,c_txdrops,c_txretryrate,c_txutilization,c_unitxframecount,c_unirxframecount,c_owner);
		end if;
	end if;

	return true;
 end;
 $BODY$
 LANGUAGE 'plpgsql' VOLATILE;