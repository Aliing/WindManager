<?xml version="1.0"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
		xmlns:comp="com.connectedpixel.charts.*"
	 	creationComplete="init()"
		paddingLeft="4" paddingTop="4" paddingRight="4" horizontalGap="0" verticalGap="0" paddingBottom="4">

	<mx:HTTPService id="httpSvc"/>

	<mx:Script>
        <![CDATA[
        	import mx.controls.Label;
        	import mx.controls.Alert;
			import mx.collections.ArrayCollection;
			import mx.charts.HitData;
			import mx.charts.events.LegendMouseEvent;
			import mx.charts.series.LineSeries;
			import mx.charts.series.items.LineSeriesItem;
			import mx.rpc.events.ResultEvent;
			import mx.events.SliderEvent;
        	import mx.controls.VSlider;
        	import mx.charts.CategoryAxis;
        	import com.connectedpixel.charts.ScrollableAxisRenderer;
        	import mx.charts.series.ColumnSeries;
        	import mx.containers.HBox;
        	import mx.charts.ColumnChart;
        	import mx.containers.GridItem;
        	import mx.containers.Grid;
        	import mx.containers.GridRow;
        	import mx.graphics.IFill;
		    import mx.graphics.SolidColor;
		    import mx.charts.ChartItem;
		    import mx.charts.series.items.ColumnSeriesItem;
			var initURL: String; 
			
			public function dateParseFunction(s:String):Date { 
			    var temp:Array = s.split(" ");    
			    var datepart:String = temp[0];    
			    var datearray:Array = datepart.split("-"); 
			    var timepart:String = temp[1];    
			    var timearray:Array = timepart.split(":");   
			    var intMon:int =datearray[1];
			    var intDay:int =datearray[2];
			    var intHour:int =timearray[0];
			    var intMin:int =timearray[1]; 
			 
			    var testDate:Date = new Date();
				var offhour:Number = testDate.getTimezoneOffset()/60 *-1;
				var offmin:Number = testDate.getTimezoneOffset()%60 *-1
			  	var newDate:Date = new Date(datearray[0],intMon-1,intDay,intHour+offhour,intMin+offmin);   
			  	
			  	return newDate;    
			}
			public function init():void {
				if (Application.application.url.indexOf("monitor/reports")>=0){
					initURL = Application.application.url.substring(0, Application.application.url.indexOf("monitor/reports"));
				} else {
					initURL="";
				}
				httpSvc.url =initURL+ "reportList.action?operation=getFlashData&key=" + new Date().time;
				httpSvc.addEventListener("result", httpResult);
				httpSvc.send();				
			 }
			 
			 public function myFillFunction(element:ChartItem, index:Number):IFill {
		        var c:SolidColor = new SolidColor(0x00CC00);
		        var curItem:ColumnSeriesItem = ColumnSeriesItem(element);
		        var item:ColumnSeries = ColumnSeries(curItem.element);
		        var typeNum:Number = Number(item.yField); 
		        try {
		        switch (typeNum) {
					case 1000:c.color = 0x800000;break;
					case 2000:c.color = 0x951500;break;
					case 5500:c.color = 0xAA2B00;break;
					case 6000:c.color = 0xBF4000;break;
					case 6500:c.color = 0xD45500;break;
					case 9000:c.color = 0xEA6B00;break;
					case 11000:c.color = 0xFF8000;break;
					case 12000:c.color = 0xFF8C00;break;
					case 13000:c.color = 0xFF9700;break;
					case 13500:c.color = 0xFFA300;break;
					case 15000:c.color = 0xFFAE00;break;
					case 18000:c.color = 0xFFBA00;break;
					case 19500:c.color = 0xFFC500;break;
					case 24000:c.color = 0xFFD100;break;
					case 26000:c.color = 0xFFDC00;break;
					case 27000:c.color = 0xFFE800;break; 
					case 30000:c.color = 0xFFF300;break; 
					case 36000:c.color = 0xFFFF00;break; 
					case 39000:c.color = 0xD4FF0B;break; 
					case 40500:c.color = 0xAAFF15;break; 
					case 45000:c.color = 0x80FF20;break; 
					case 48000:c.color = 0x55FF2B;break; 
					case 52000:c.color = 0x2BFF35;break; 
					case 54000:c.color = 0x00FF40;break; 
					case 58000:c.color = 0x00FF58;break;  
					case 58500:c.color = 0x00FF70;break;  
					case 60000:c.color = 0x00FF88;break;  
					case 65000:c.color = 0x00FF9F;break;  
					case 78000:c.color = 0x00FFB7;break;  
					case 81000:c.color = 0x00FFCF;break;  
					case 90000:c.color = 0x00FFE7;break;  
					case 104000:c.color = 0x00FFFF;break; 
					case 108000:c.color = 0x00F1FE;break; 
					case 117000:c.color = 0x01E4FC;break; 
					case 120000:c.color = 0x01D6FB;break; 
					case 121500:c.color = 0x01C8F9;break; 
					case 130000:c.color = 0x02BBF8;break; 
					case 135000:c.color = 0x02ADF6;break; 
					case 150000:c.color = 0x029FF5;break; 
					case 156000:c.color = 0x0292F4;break; 
					case 162000:c.color = 0x0384F2;break; 
					case 175000:c.color = 0x0376F1;break; 
					case 180000:c.color = 0x066DE3;break; 
					case 195000:c.color = 0x0963D4;break; 
					case 216000:c.color = 0x0C5AC6;break; 
					case 240000:c.color = 0x0F50B8;break; 
					case 243000:c.color = 0x1246AA;break; 
					case 270000:c.color = 0x153D9C;break; 
					case 300000:c.color = 0x18338D;break; 
					case 324000:c.color = 0x1B2A7F;break; 
					case 360000:c.color = 0x1E2071;break; 
					case 364000:c.color = 0x211662;break; 
					case 405000:c.color = 0x240C54;break; 
					case 450000:c.color = 0x270346;break; 
		        }
		        } catch (err: Error) {
		        	Alert.show(err.message);
		        }
		        return c;
		    }
			 
			 public function httpResult(event:ResultEvent):void {
                //var result:Object = event.result;
                if (httpSvc.lastResult.report.interfaceInfo.wifi0.txRateDistribution!=null){
                	var wifi0txRateChart:ColumnChart = new ColumnChart();
                	wifi0txRateChart.showDataTips=true;
                	wifi0txRateChart.type="stacked";
                	wifi0txRateChart.dataTipFunction=myDataTipFunctionForColumn;
					wifi0txRateChart.dataProvider=httpSvc.lastResult.report.interfaceInfo.wifi0.txRateDistribution.item;
					var currentSeries:Array=new Array();
					if (httpSvc.lastResult.report.interfaceInfo.wifi0.txRateType.keySet.length>0) {
						var rateType:ArrayCollection = httpSvc.lastResult.report.interfaceInfo.wifi0.txRateType.keySet;
		                for(var i:int=0;i<rateType.length;i++){
		                	var localSeries:ColumnSeries = new ColumnSeries();
		                	localSeries.yField=rateType[i].typeString;
		                	localSeries.xField="date";
		                	localSeries.displayName = rateType[i].typeString;
		                	localSeries.fillFunction=myFillFunction;
		                	currentSeries.push(localSeries);
		                }
	    			} else {
	    				var localSeries:ColumnSeries = new ColumnSeries();
	                	localSeries.yField=httpSvc.lastResult.report.interfaceInfo.wifi0.txRateType.keySet.typeString;
	                	localSeries.xField="date";
	                	localSeries.displayName = httpSvc.lastResult.report.interfaceInfo.wifi0.txRateType.keySet.typeString;
	                	localSeries.fillFunction=myFillFunction;
	                	currentSeries.push(localSeries);
	    			}
	                wifi0txRateChart.series = currentSeries;
	                
	                var dAxis:CategoryAxis = new CategoryAxis();
        			dAxis.categoryField="date";
        			wifi0txRateChart.horizontalAxis = dAxis;

					var vSlider0:VSlider = new VSlider();
					if (httpSvc.lastResult.report.interfaceInfo.wifi0.txRateDistribution.item.length>5) {
		 				var renderer:Array = new Array();
		                var scrBar0:ScrollableAxisRenderer = new ScrollableAxisRenderer();
		                scrBar0.axis=dAxis;
		                scrBar0.horizontal=true;
		                scrBar0.placement="bottom";
		                scrBar0.maxVisibleColumns=8;
		                renderer.push(scrBar0);
		                wifi0txRateChart.horizontalAxisRenderers=renderer;

		                vSlider0.minimum=5;
		                vSlider0.maximum=httpSvc.lastResult.report.interfaceInfo.wifi0.txRateDistribution.item.length;
		                vSlider0.value=scrBar0.maxVisibleColumns;
		                vSlider0.showDataTip=false;
		                vSlider0.addEventListener(SliderEvent.CHANGE, function v0Change():void{scrBar0.maxVisibleColumns=vSlider0.value});
		                vSlider0.snapInterval=1;
		                vSlider0.allowTrackClick=true;
		                vSlider0.liveDragging=true;
		                vSlider0.alpha=1.0;
		                vSlider0.buttonMode=true;
	                
	                }
	                var hBox:HBox = new HBox();
	                hBox.percentHeight=100;
	                hBox.percentWidth=100;
	                hBox.addChild(wifi0txRateChart);
	               if (httpSvc.lastResult.report.interfaceInfo.wifi0.txRateDistribution.item.length>5) {
	                	hBox.addChild(vSlider0);
	               }
	                wifi0txRateDis.addChild(hBox);
	                wifi0txRateChart.percentWidth=95;
                	wifi0txRateChart.percentHeight=100;
                	if (httpSvc.lastResult.report.interfaceInfo.wifi0.txRateDistribution.item.length>5) {
	                	vSlider0.percentWidth=5;
		                vSlider0.percentHeight=100;
	                }
                } else {
                	//Alert.show("ddd");
                	 var nodataLabel0:Label= new Label();
                	 wifi0txRateDis.addChild(nodataLabel0);
                	 nodataLabel0.text="There is no data to display.";
                	 nodataLabel0.percentWidth=100;
                	 nodataLabel0.percentHeight=100;
                	 nodataLabel0.visible=true;
                }
                // rx rate chart
                if (httpSvc.lastResult.report.interfaceInfo.wifi0.rxRateDistribution!=null){
                	var wifi0rxRateChart:ColumnChart = new ColumnChart();
                	wifi0rxRateChart.showDataTips=true;
                	wifi0rxRateChart.type="stacked";
                	wifi0rxRateChart.dataTipFunction=myDataTipFunctionForColumn;
					wifi0rxRateChart.dataProvider=httpSvc.lastResult.report.interfaceInfo.wifi0.rxRateDistribution.item;
					
					var currentSeries:Array=new Array();
					if (httpSvc.lastResult.report.interfaceInfo.wifi0.rxRateType.keySet.length>0) {
						var rateType:ArrayCollection = httpSvc.lastResult.report.interfaceInfo.wifi0.rxRateType.keySet;
		                for(var i:int=0;i<rateType.length;i++){
		                	var localSeries:ColumnSeries = new ColumnSeries();
		                	localSeries.yField=rateType[i].typeString;
		                	localSeries.xField="date";
		                	localSeries.displayName = rateType[i].typeString;
		                	localSeries.fillFunction=myFillFunction;
		                	currentSeries.push(localSeries);
		                }
	   				 } else {
	   				 	var localSeries:ColumnSeries = new ColumnSeries();
		                	localSeries.yField=httpSvc.lastResult.report.interfaceInfo.wifi0.rxRateType.keySet.typeString;
		                	localSeries.xField="date";
		                	localSeries.displayName = httpSvc.lastResult.report.interfaceInfo.wifi0.rxRateType.keySet.typeString;
		                	localSeries.fillFunction=myFillFunction;
		                	currentSeries.push(localSeries);
	   				 }
	    	
	                wifi0rxRateChart.series = currentSeries;
	                
	                var dAxis:CategoryAxis = new CategoryAxis();
        			dAxis.categoryField="date";
        			wifi0rxRateChart.horizontalAxis = dAxis;
        			
					var vSlider1:VSlider = new VSlider();
					if (httpSvc.lastResult.report.interfaceInfo.wifi0.rxRateDistribution.item.length>5){
		 				var renderer:Array = new Array();
		                var scrBar1:ScrollableAxisRenderer = new ScrollableAxisRenderer();
		                scrBar1.axis=dAxis;
		                scrBar1.horizontal=true;
		                scrBar1.placement="bottom";
		                scrBar1.maxVisibleColumns=8;
		                renderer.push(scrBar1);
		                wifi0rxRateChart.horizontalAxisRenderers=renderer;
		                
		                vSlider1.minimum=5;
		                vSlider1.maximum=httpSvc.lastResult.report.interfaceInfo.wifi0.rxRateDistribution.item.length;
		                vSlider1.value=scrBar1.maxVisibleColumns;
		                vSlider1.showDataTip=false;
		                vSlider1.addEventListener(SliderEvent.CHANGE, function v1Change():void{scrBar1.maxVisibleColumns=vSlider1.value});
		                vSlider1.snapInterval=1;
		                vSlider1.allowTrackClick=true;
		                vSlider1.liveDragging=true;
		                vSlider1.alpha=1.0;
		                vSlider1.buttonMode=true;
	                }
	                var hBox:HBox = new HBox();
	                hBox.percentHeight=100;
	                hBox.percentWidth=100;
	                hBox.addChild(wifi0rxRateChart);
	                if (httpSvc.lastResult.report.interfaceInfo.wifi0.rxRateDistribution.item.length>5){
	                	hBox.addChild(vSlider1);
	                }
	                wifi0rxRateDis.addChild(hBox);
	                wifi0rxRateChart.percentWidth=95;
                	wifi0rxRateChart.percentHeight=100;
                	
                	if (httpSvc.lastResult.report.interfaceInfo.wifi0.rxRateDistribution.item.length>5){
	                	vSlider1.percentWidth=5;
		                vSlider1.percentHeight=100;
	                }
	                
                } else {
                	 var nodataLabel1:Label= new Label();
                	 wifi0rxRateDis.addChild(nodataLabel1);
                	 nodataLabel1.text="There is no data to display.";
                	 nodataLabel1.percentWidth=100;
                	 nodataLabel1.percentHeight=100;
                	 nodataLabel1.visible=true;
                }

                // for wifi1 data
                if (httpSvc.lastResult.report.interfaceInfo.wifi1.txRateDistribution!=null){
                	var wifi1txRateChart:ColumnChart = new ColumnChart();
                	wifi1txRateChart.showDataTips=true;
                	wifi1txRateChart.type="stacked";
                	wifi1txRateChart.dataTipFunction=myDataTipFunctionForColumn;
					wifi1txRateChart.dataProvider=httpSvc.lastResult.report.interfaceInfo.wifi1.txRateDistribution.item;
					
					var currentSeries:Array=new Array();
					if (httpSvc.lastResult.report.interfaceInfo.wifi1.txRateType.keySet.length>0) {
						var rateType:ArrayCollection = httpSvc.lastResult.report.interfaceInfo.wifi1.txRateType.keySet;
		                for(var i:int=0;i<rateType.length;i++){
		                	var localSeries:ColumnSeries = new ColumnSeries();
		                	localSeries.yField=rateType[i].typeString;
		                	localSeries.xField="date";
		                	localSeries.displayName = rateType[i].typeString;
		                	localSeries.fillFunction=myFillFunction;
		                	currentSeries.push(localSeries);
		                }
	                } else {
	                	var localSeries:ColumnSeries = new ColumnSeries();
		                	localSeries.yField=httpSvc.lastResult.report.interfaceInfo.wifi1.txRateType.keySet.typeString;
		                	localSeries.xField="date";
		                	localSeries.displayName = httpSvc.lastResult.report.interfaceInfo.wifi1.txRateType.keySet.typeString;
		                	localSeries.fillFunction=myFillFunction;
		                	currentSeries.push(localSeries);
	                }
	                wifi1txRateChart.series = currentSeries;
	                
	                var dAxis:CategoryAxis = new CategoryAxis();
        			dAxis.categoryField="date";
        			wifi1txRateChart.horizontalAxis = dAxis;

					var wifi1vSlider0:VSlider = new VSlider();
					if (httpSvc.lastResult.report.interfaceInfo.wifi1.txRateDistribution.item.length>5){
		 				var renderer:Array = new Array();
		                var wifi1scrBar0:ScrollableAxisRenderer = new ScrollableAxisRenderer();
		                wifi1scrBar0.axis=dAxis;
		                wifi1scrBar0.horizontal=true;
		                wifi1scrBar0.placement="bottom";
		                wifi1scrBar0.maxVisibleColumns=8;
		                renderer.push(wifi1scrBar0);
		                wifi1txRateChart.horizontalAxisRenderers=renderer;

		                wifi1vSlider0.minimum=5;
		                wifi1vSlider0.maximum=httpSvc.lastResult.report.interfaceInfo.wifi1.txRateDistribution.item.length;
		                wifi1vSlider0.value=wifi1scrBar0.maxVisibleColumns;
		                wifi1vSlider0.showDataTip=false;
		                wifi1vSlider0.addEventListener(SliderEvent.CHANGE, function wifi1v0Change():void{wifi1scrBar0.maxVisibleColumns=wifi1vSlider0.value});
		                wifi1vSlider0.snapInterval=1;
		                wifi1vSlider0.allowTrackClick=true;
		                wifi1vSlider0.liveDragging=true;
		                wifi1vSlider0.alpha=1.0;
		                wifi1vSlider0.buttonMode=true;
	                
	                }
	                
	                var hBox:HBox = new HBox();
	                hBox.percentHeight=100;
	                hBox.percentWidth=100;
	                hBox.addChild(wifi1txRateChart);
	                if (httpSvc.lastResult.report.interfaceInfo.wifi1.txRateDistribution.item.length>5){
	                	hBox.addChild(wifi1vSlider0);
	                }
	                wifi1txRateDis.addChild(hBox);
	                wifi1txRateChart.percentWidth=95;
                	wifi1txRateChart.percentHeight=100;
                	if (httpSvc.lastResult.report.interfaceInfo.wifi1.txRateDistribution.item.length>5){
	                	wifi1vSlider0.percentWidth=5;
		                wifi1vSlider0.percentHeight=100;
	                }
                } else {
                	//Alert.show("ddd");
                	 var nodataLabel0:Label= new Label();
                	 wifi1txRateDis.addChild(nodataLabel0);
                	 nodataLabel0.text="There is no data to display.";
                	 nodataLabel0.percentWidth=100;
                	 nodataLabel0.percentHeight=100;
                	 nodataLabel0.visible=true;
                }
                // rx rate chart
                if (httpSvc.lastResult.report.interfaceInfo.wifi1.rxRateDistribution!=null){
                	var wifi1rxRateChart:ColumnChart = new ColumnChart();
                	wifi1rxRateChart.showDataTips=true;
                	wifi1rxRateChart.type="stacked";
                	wifi1rxRateChart.dataTipFunction=myDataTipFunctionForColumn;
					wifi1rxRateChart.dataProvider=httpSvc.lastResult.report.interfaceInfo.wifi1.rxRateDistribution.item;
					var currentSeries:Array=new Array();
					if (httpSvc.lastResult.report.interfaceInfo.wifi1.rxRateType.keySet.length>0) {
						var rateType:ArrayCollection = httpSvc.lastResult.report.interfaceInfo.wifi1.rxRateType.keySet;
	
		                for(var i:int=0;i<rateType.length;i++){
		                	var localSeries:ColumnSeries = new ColumnSeries();
		                	localSeries.yField=rateType[i].typeString;
		                	localSeries.xField="date";
		                	localSeries.displayName = rateType[i].typeString;
		                	localSeries.fillFunction=myFillFunction;
		                	currentSeries.push(localSeries);
		                }
				   } else {
				   	var localSeries:ColumnSeries = new ColumnSeries();
		                	localSeries.yField=httpSvc.lastResult.report.interfaceInfo.wifi1.rxRateType.keySet.typeString;
		                	localSeries.xField="date";
		                	localSeries.displayName = httpSvc.lastResult.report.interfaceInfo.wifi1.rxRateType.keySet.typeString;
		                	localSeries.fillFunction=myFillFunction;
		                	currentSeries.push(localSeries);
				   }
	                wifi1rxRateChart.series = currentSeries;
	                
	                var dAxis:CategoryAxis = new CategoryAxis();
        			dAxis.categoryField="date";
        			wifi1rxRateChart.horizontalAxis = dAxis;
        			
					var wifi1vSlider1:VSlider = new VSlider();
					if (httpSvc.lastResult.report.interfaceInfo.wifi1.rxRateDistribution.item.length>5){
						
		 				var renderer:Array = new Array();
		                var wifi1scrBar1:ScrollableAxisRenderer = new ScrollableAxisRenderer();
		                wifi1scrBar1.axis=dAxis;
		                wifi1scrBar1.horizontal=true;
		                wifi1scrBar1.placement="bottom";
		                wifi1scrBar1.maxVisibleColumns=8;
		                renderer.push(wifi1scrBar1);
		                wifi1rxRateChart.horizontalAxisRenderers=renderer;
		                
		                wifi1vSlider1.minimum=5;
		                wifi1vSlider1.maximum=httpSvc.lastResult.report.interfaceInfo.wifi1.rxRateDistribution.item.length;
		                wifi1vSlider1.value=wifi1scrBar1.maxVisibleColumns;
		                wifi1vSlider1.showDataTip=false;
		                wifi1vSlider1.addEventListener(SliderEvent.CHANGE, function wifi1v1Change():void{wifi1scrBar1.maxVisibleColumns=wifi1vSlider1.value});
		                wifi1vSlider1.snapInterval=1;
		                wifi1vSlider1.allowTrackClick=true;
		                wifi1vSlider1.liveDragging=true;
		                wifi1vSlider1.alpha=1.0;
		                wifi1vSlider1.buttonMode=true;
	                } 
	                var hBox:HBox = new HBox();
	                hBox.percentHeight=100;
	                hBox.percentWidth=100;
	                hBox.addChild(wifi1rxRateChart);
	               if (httpSvc.lastResult.report.interfaceInfo.wifi1.rxRateDistribution.item.length>5){
	                	hBox.addChild(wifi1vSlider1);
	               }
	                wifi1rxRateDis.addChild(hBox);
	                wifi1rxRateChart.percentWidth=95;
                	wifi1rxRateChart.percentHeight=100;
                	if (httpSvc.lastResult.report.interfaceInfo.wifi1.rxRateDistribution.item.length>5){
		                wifi1vSlider1.percentWidth=5;
		                wifi1vSlider1.percentHeight=100;
	                }
	                
                } else {
                	 var nodataLabel1:Label= new Label();
                	 wifi1rxRateDis.addChild(nodataLabel1);
                	 nodataLabel1.text="There is no data to display.";
                	 nodataLabel1.percentWidth=100;
                	 nodataLabel1.percentHeight=100;
                	 nodataLabel1.visible=true;
                }

                loadPanel.height=0;
                dataPanel.height=520;
            }
			 
		    public function myDataTipFunction(e:HitData):String {
		
		       	var s:String;
		        s = "<B>" + LineSeries(e.element).displayName + "</B>\n";
		        s += "<I>Date Time:</I>" + e.item.date + "\n";
		        s += "<I>Value:</I>" + e.item.count + " frames\n";
		
		        return s
		    }	
		    public function myDataTipFunctionNoFrame(e:HitData):String {
		
		       	var s:String;
		        s = "<B>" + LineSeries(e.element).displayName + "</B>\n";
		        s += "<I>Date Time:</I>" + e.item.date + "\n";
		        s += "<I>Value:</I>" + e.item.count + "\n";
		
		        return s
		    }
		    
		    public function myDataTipFunctionForRateDis(e:HitData):String {
		
		       	var s:String;
		        s = "<B>" + LineSeries(e.element).displayName + "</B>\n";
		        s += "<I>Date Time:</I>" + e.item.date + "\n";
		        s += "<I>Value:</I>" + e.item.count + "\n";
		        s += "<I>Detail:</I>" + e.item.detail + "\n";
		
		        return s
		    }
		    
		    public function myDataTipFunctionForColumn(e:HitData):String {
		       	var s:String;
		       	var colData: String = ColumnSeries(e.element).yField;
		       	var col:Number = parseFloat(colData);
		       	col = col/1000;
		       	
		        s = "<B>" + col.toString() + " Mbps" + "</B>\n";
		        s += "<I>Date Time:</I>" + e.item.date + "\n";
		        if (e.chartItem.item[colData]==null || isNaN(e.chartItem.item[colData]) || e.chartItem.item[colData]=='undefined'){
		        	s += "<I>"+ col.toString() + " Mbps" +":</I>" + "0%\n";
		        } else {
		        	if(e.chartItem.item[colData].toString().length>3){
			        	try{
			        		s += "<I>"+ col.toString() + " Mbps" +":</I>" + parseInt(e.chartItem.item[colData].toString()) + "%\n";
			        	} catch (err:Error){
			        		s += "<I>"+ col.toString() + " Mbps" +":</I>" + "0%\n";
			        	} 
		        	} else {
		        		s += "<I>"+ col.toString() + " Mbps" +":</I>" + e.chartItem.item[colData] + "%\n";
		        	}
		        }

		        return s
		    }
		    
		    public function changeRadioButton():void{
		    	if (radio0.selected) {
		    		acwifi0.height=495;
		    		acwifi0.visible=true;
		    		acwifi1.height=0;
		    		acwifi1.visible=false;
		    	} else {
		    		acwifi0.height=0;
		    		acwifi0.visible=false;
		    		acwifi1.height=495;
		    		acwifi1.visible=true;
		    	}
		    }
		   private function mv(event:LegendMouseEvent,ch:LineChart):void{
		        for(var i:int=0;i<ch.series.length;i++){
		            var tmpSeries:LineSeries = ch.series[i];
		            if(tmpSeries.displayName != event.item.label){
		            	tmpSeries.visible=false;
		            }
		        }
		    }
		   private function mo(event:LegendMouseEvent,ch:LineChart):void{
		        for(var i:int=0;i<ch.series.length;i++){
		            var tmpSeries:LineSeries = ch.series[i];
		            tmpSeries.visible=true;
		       }
		   }

        ]]>
    </mx:Script>

    <mx:Panel width="100%" id="loadPanel" height="520" headerHeight="0" borderThickness="0"  verticalGap="0" borderThicknessBottom="0" borderThicknessLeft="0" borderThicknessRight="0" borderThicknessTop="0">
        <mx:Label text="Loading..." width="162" height="50" fontSize="21" color="#FB0404"/>
    </mx:Panel>
  	<mx:Panel width="100%" id="dataPanel" height="0" headerHeight="0" borderThickness="0"  verticalGap="0" borderThicknessBottom="0" borderThicknessLeft="0" borderThicknessRight="0" borderThicknessTop="0">
 	<mx:Grid verticalGap="0" horizontalGap="0" borderThickness="0" height="25" width="100%" color="#FFCC00">
	    <mx:GridRow height="25" borderThickness="0" width="100%">
	    	<mx:GridItem borderThickness="0" width="100%" horizontalAlign="center" verticalAlign="middle" backgroundColor="#0D496B">
	    		<mx:Label text="Interface Name: "  fontWeight="bold"/>
	    		<mx:RadioButton label="wifi0" id="radio0" width="58" click="changeRadioButton();"  fontWeight="bold" themeColor="#FFCC00" borderColor="#FFCC00" fillAlphas="[1.0, 1.0]" textRollOverColor="#FFCC00" fillColors="[#FFFFFF, #FFFFFF, #E9F703, #E9F703]" selected="true"/>
	    		<mx:RadioButton label="wifi1" id="radio1" fontWeight="bold" click="changeRadioButton();" themeColor="#FFCC00" borderColor="#FFCC00" fillAlphas="[1.0, 1.0]" fillColors="[#FFFFFF, #FFFFFF, #E9F703, #E9F703]"  textRollOverColor="#FFCC00"/>
	    	</mx:GridItem>
	    </mx:GridRow>
	</mx:Grid>
    <mx:Accordion width="100%" height="495" id="acwifi0" headerHeight="18" >
        <mx:Canvas label="Transmitted and Received Frames Information" width="100%" height="100%">
    		<mx:VBox width="100%" height="100%">
			    <mx:LineChart id="wifi0frameCountChart" height="80%" width="100%" 
		    	    paddingRight="0" paddingLeft="0" 
		    	    dataTipFunction="myDataTipFunction"
		        	showDataTips="true">
		        	<mx:seriesFilters>
			           <mx:Array/>
			        </mx:seriesFilters>
		            <mx:horizontalAxis>
			            <mx:DateTimeAxis
			            	dataUnits="hours"
			            	parseFunction="dateParseFunction"/>
		    	    </mx:horizontalAxis>
		
		        	<mx:verticalAxis>
		            	<mx:LinearAxis baseAtZero="true"/>
		            </mx:verticalAxis>
		
			        <mx:series>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi0.txUnicast.item}"
								displayName="Tx Unicast Frames">
				            <mx:lineStroke>
				                <mx:Stroke color="0x0000FF"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
						
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi0.rxUnicast.item}"
								displayName="Rx Unicast Frames">
				            <mx:lineStroke>
				                <mx:Stroke color="0xFF0000"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi0.txDrops.item}"
								displayName="Tx Dropped Frames">
				            <mx:lineStroke>
				                <mx:Stroke color="0x00FF00"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi0.rxDrops.item}"
								displayName="Rx Dropped Frames">
				            <mx:lineStroke>
				                <mx:Stroke color="0xFFFF00"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi0.txBroadcast.item}"
								displayName="Tx Broadcast Frames">
				            <mx:lineStroke>
				                <mx:Stroke color="0x00FFFF"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi0.rxBroadcast.item}"
								displayName="Rx Broadcast Frames">
				            <mx:lineStroke>
				                <mx:Stroke color="0xFF00FF"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		        	</mx:series>
		        </mx:LineChart>
         		<mx:Legend dataProvider="{wifi0frameCountChart}" width="100%" height="20%" fontSize="9" markerHeight="10" markerWidth="8" itemMouseOver="mv(event,wifi0frameCountChart)" itemMouseOut="mo(event,wifi0frameCountChart)"/>
			</mx:VBox>
		</mx:Canvas> 
        <mx:Canvas label="Transmitted and Received Utilization Information (%)" width="100%" height="100%">
    		<mx:VBox width="100%" height="100%">
			    <mx:LineChart id="wifi0percentCountChart" height="80%" width="100%"
		    	    paddingRight="0" paddingLeft="0" 
		    	    dataTipFunction="myDataTipFunctionNoFrame"
		        	showDataTips="true">
		        	<mx:seriesFilters>
			           <mx:Array/>
			        </mx:seriesFilters>
		            <mx:horizontalAxis>
			            <mx:DateTimeAxis
			            	dataUnits="hours"
			            	parseFunction="dateParseFunction"/>
		    	    </mx:horizontalAxis>
		        	<mx:verticalAxis>
		            	<mx:LinearAxis baseAtZero="true"/>
		            </mx:verticalAxis>
			        <mx:series>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi0.txTotalU.item}"
								displayName="Tx Rate">
				            <mx:lineStroke>
				                <mx:Stroke color="0x0000FF"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi0.rxTotalU.item}"
								displayName="Rx Rate">
				            <mx:lineStroke>
				                <mx:Stroke color="0xFF0000"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi0.txRetryRateU.item}"
								displayName="Tx Retry Rate">
				            <mx:lineStroke>
				                <mx:Stroke color="0x00FF00"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi0.rxRetryRateU.item}"
								displayName="Rx Retry Rate">
				            <mx:lineStroke>
				                <mx:Stroke color="0xFFFF00"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi0.txAirtimeU.item}"
								displayName="Tx Airtime">
				            <mx:lineStroke>
				                <mx:Stroke color="0x00FFFF"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi0.rxAirtimeU.item}"
								displayName="Rx Airtime">
				            <mx:lineStroke>
				                <mx:Stroke color="0xFF00FF"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
						<mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi0.crcErrorRateU.item}"
								displayName="CRC Error Rate">
				            <mx:lineStroke>
				                <mx:Stroke color="0x660000"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi0.totalChannelU.item}"
								displayName="Channel">
				            <mx:lineStroke>
				                <mx:Stroke color="0x006600"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi0.interferenceU.item}"
								displayName="interference">
				            <mx:lineStroke>
				                <mx:Stroke color="0x000066"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		        	</mx:series>
		        </mx:LineChart> 
         		<mx:Legend dataProvider="{wifi0percentCountChart}" width="100%" height="20%" fontSize="9" markerHeight="10" markerWidth="8" itemMouseOver="mv(event,wifi0percentCountChart)" itemMouseOut="mo(event,wifi0percentCountChart)"/>
			</mx:VBox>
		</mx:Canvas> 
        <mx:Canvas label="Noise Floor (dBm)" width="100%" height="100%">
    		<mx:VBox width="100%" height="100%">
			    <mx:LineChart id="wifi0noiseFloorChart" height="90%" width="100%"
		    	    paddingRight="0" paddingLeft="0" 
		    	    dataTipFunction="myDataTipFunctionNoFrame"
		        	showDataTips="true">
		        	<mx:seriesFilters>
			           <mx:Array/>
			        </mx:seriesFilters>
		            <mx:horizontalAxis>
			            <mx:DateTimeAxis
			            	dataUnits="hours"
			            	parseFunction="dateParseFunction"/>
		    	    </mx:horizontalAxis>
		        	<mx:verticalAxis>
		            	<mx:LinearAxis baseAtZero="true"/>
		            </mx:verticalAxis>
			        <mx:series>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi0.noiseFloor.item}"
								displayName="Noise Floor">
				            <mx:lineStroke>
				                <mx:Stroke color="0x0000FF"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		        	</mx:series>
		        </mx:LineChart> 
         		<mx:Legend dataProvider="{wifi0noiseFloorChart}" width="100%" height="10%" fontSize="9" markerHeight="10" markerWidth="8"/>
			</mx:VBox>
		</mx:Canvas> 
		<mx:Canvas label="High Density Statistics Counters" width="100%" height="100%">
    		<mx:VBox width="100%" height="100%">
			    <mx:LineChart id="wifi0HighDensityCountChart" height="80%" width="100%"
		    	    paddingRight="0" paddingLeft="0" 
		    	    dataTipFunction="myDataTipFunctionNoFrame"
		        	showDataTips="true">
		        	<mx:seriesFilters>
			           <mx:Array/>
			        </mx:seriesFilters>
		            <mx:horizontalAxis>
			            <mx:DateTimeAxis
			            	dataUnits="hours"
			            	parseFunction="dateParseFunction"/>
		    	    </mx:horizontalAxis>
		        	<mx:verticalAxis>
		            	<mx:LinearAxis baseAtZero="true"/>
		            </mx:verticalAxis>
			        <mx:series>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi0.bandsteering.item}"
								displayName="Band Steering Suppress Count">
				            <mx:lineStroke>
				                <mx:Stroke color="0x0000FF"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi0.loadbalance.item}"
								displayName="Load Balance Suppress Count">
				            <mx:lineStroke>
				                <mx:Stroke color="0xFF0000"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi0.weaksnr.item}"
								displayName="Weak SNR Suppress Count">
				            <mx:lineStroke>
				                <mx:Stroke color="0x00FF00"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi0.safetynet.item}"
								displayName="Safety Net Answer Count">
				            <mx:lineStroke>
				                <mx:Stroke color="0xFFFF00"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi0.proberequest.item}"
								displayName="Probe Request Suppress Count">
				            <mx:lineStroke>
				                <mx:Stroke color="0x00FFFF"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi0.authrequest.item}"
								displayName="Auth Request Suppress Count">
				            <mx:lineStroke>
				                <mx:Stroke color="0xFF00FF"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		        	</mx:series>
		        </mx:LineChart> 
         		<mx:Legend dataProvider="{wifi0HighDensityCountChart}" width="100%" height="20%" fontSize="9" markerHeight="10" markerWidth="8" itemMouseOver="mv(event,wifi0HighDensityCountChart)" itemMouseOut="mo(event,wifi0HighDensityCountChart)"/>
			</mx:VBox>
		</mx:Canvas> 
        <mx:Canvas label="Transmitted Bit Rate Distribution" width="100%" id="wifi0txRateDis" height="100%">
    		
		</mx:Canvas> 
        <mx:Canvas label="Received Bit Rate Distribution" width="100%" height="100%" id="wifi0rxRateDis">
		</mx:Canvas>
        <mx:Canvas label="Bit Rate Success Distribution (%)" width="100%" height="100%" id="wifi0txRateSuccDis">
            <mx:VBox width="100%" height="100%">
			    <mx:LineChart id="wifi0rateSuccessDistributionChart" height="90%" width="100%"
		    	    paddingRight="0" paddingLeft="0" 
		    	    dataTipFunction="myDataTipFunctionForRateDis"
		        	showDataTips="true">
		        	<mx:seriesFilters>
			           <mx:Array/>
			        </mx:seriesFilters>
		            <mx:horizontalAxis>
			            <mx:DateTimeAxis
			            	dataUnits="hours"
			            	parseFunction="dateParseFunction"/>
		    	    </mx:horizontalAxis>
		        	<mx:verticalAxis>
		            	<mx:LinearAxis baseAtZero="true"/>
		            </mx:verticalAxis>
			        <mx:series>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi0.txRateSuccDistribution.item}"
								displayName="Tx Rate Success">
				            <mx:lineStroke>
				                <mx:Stroke color="0x0000FF"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
						<mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi0.rxRateSuccDistribution.item}"
								displayName="Rx Rate Success">
				            <mx:lineStroke>
				                <mx:Stroke color="0x00FF00"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		        	</mx:series>
		        </mx:LineChart> 
         		<mx:Legend dataProvider="{wifi0rateSuccessDistributionChart}" width="100%" height="10%" fontSize="9" markerHeight="10" markerWidth="8" itemMouseOver="mv(event,wifi0rateSuccessDistributionChart)" itemMouseOut="mo(event,wifi0rateSuccessDistributionChart)"/>
			</mx:VBox>
		</mx:Canvas>
	</mx:Accordion>
	<mx:Accordion width="100%" height="0" id="acwifi1" headerHeight="18" visible="false">
        <mx:Canvas label="Transmitted and Received Frames Information" width="100%" height="100%">
    		<mx:VBox width="100%" height="100%">
			    <mx:LineChart id="wifi1frameCountChart" height="80%" width="100%" 
		    	    paddingRight="0" paddingLeft="0" 
		    	    dataTipFunction="myDataTipFunction"
		        	showDataTips="true">
		        	<mx:seriesFilters>
			           <mx:Array/>
			        </mx:seriesFilters>
		            <mx:horizontalAxis>
			            <mx:DateTimeAxis
			            	dataUnits="hours"
			            	parseFunction="dateParseFunction"/>
		    	    </mx:horizontalAxis>
		
		        	<mx:verticalAxis>
		            	<mx:LinearAxis baseAtZero="true"/>
		            </mx:verticalAxis>
		
			        <mx:series>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi1.txUnicast.item}"
								displayName="Tx Unicast Frames">
				            <mx:lineStroke>
				                <mx:Stroke color="0x0000FF"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
						
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi1.rxUnicast.item}"
								displayName="Rx Unicast Frames">
				            <mx:lineStroke>
				                <mx:Stroke color="0xFF0000"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi1.txDrops.item}"
								displayName="Tx Dropped Frames">
				            <mx:lineStroke>
				                <mx:Stroke color="0x00FF00"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi1.rxDrops.item}"
								displayName="Rx Dropped Frames">
				            <mx:lineStroke>
				                <mx:Stroke color="0xFFFF00"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi1.txBroadcast.item}"
								displayName="Tx Broadcast Frames">
				            <mx:lineStroke>
				                <mx:Stroke color="0x00FFFF"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi1.rxBroadcast.item}"
								displayName="Rx Broadcast Frames">
				            <mx:lineStroke>
				                <mx:Stroke color="0xFF00FF"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		        	</mx:series>
		        </mx:LineChart>
         		<mx:Legend dataProvider="{wifi1frameCountChart}" width="100%" height="20%" fontSize="9" markerHeight="10" markerWidth="8" itemMouseOver="mv(event,wifi1frameCountChart)" itemMouseOut="mo(event,wifi1frameCountChart)"/>
			</mx:VBox>
		</mx:Canvas> 
        <mx:Canvas label="Transmitted and Received Utilization Information (%)" width="100%" height="100%">
    		<mx:VBox width="100%" height="100%">
			    <mx:LineChart id="wifi1percentCountChart" height="80%" width="100%"
		    	    paddingRight="0" paddingLeft="0" 
		    	    dataTipFunction="myDataTipFunctionNoFrame"
		        	showDataTips="true">
		        	<mx:seriesFilters>
			           <mx:Array/>
			        </mx:seriesFilters>
		            <mx:horizontalAxis>
			            <mx:DateTimeAxis
			            	dataUnits="hours"
			            	parseFunction="dateParseFunction"/>
		    	    </mx:horizontalAxis>
		        	<mx:verticalAxis>
		            	<mx:LinearAxis baseAtZero="true"/>
		            </mx:verticalAxis>
			        <mx:series>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi1.txTotalU.item}"
								displayName="Tx Rate">
				            <mx:lineStroke>
				                <mx:Stroke color="0x0000FF"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi1.rxTotalU.item}"
								displayName="Rx Rate">
				            <mx:lineStroke>
				                <mx:Stroke color="0xFF0000"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi1.txRetryRateU.item}"
								displayName="Tx Retry Rate">
				            <mx:lineStroke>
				                <mx:Stroke color="0x00FF00"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi1.rxRetryRateU.item}"
								displayName="Rx Retry Rate">
				            <mx:lineStroke>
				                <mx:Stroke color="0xFFFF00"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi1.txAirtimeU.item}"
								displayName="Tx Airtime">
				            <mx:lineStroke>
				                <mx:Stroke color="0x00FFFF"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi1.rxAirtimeU.item}"
								displayName="Rx Airtime">
				            <mx:lineStroke>
				                <mx:Stroke color="0xFF00FF"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
						<mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi1.crcErrorRateU.item}"
								displayName="CRC Error Rate">
				            <mx:lineStroke>
				                <mx:Stroke color="0x660000"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi1.totalChannelU.item}"
								displayName="Channel Rate">
				            <mx:lineStroke>
				                <mx:Stroke color="0x006600"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi1.interferenceU.item}"
								displayName="interference">
				            <mx:lineStroke>
				                <mx:Stroke color="0x000066"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		        	</mx:series>
		        </mx:LineChart> 
         		<mx:Legend dataProvider="{wifi1percentCountChart}" width="100%" height="20%" fontSize="9" markerHeight="10" markerWidth="8" itemMouseOver="mv(event,wifi1percentCountChart)" itemMouseOut="mo(event,wifi1percentCountChart)"/>
			</mx:VBox>
		</mx:Canvas> 
        <mx:Canvas label="Noise Floor (dBm)" width="100%" height="100%">
    		<mx:VBox width="100%" height="100%">
			    <mx:LineChart id="wifi1noiseFloorChart" height="90%" width="100%"
		    	    paddingRight="0" paddingLeft="0" 
		    	    dataTipFunction="myDataTipFunctionNoFrame"
		        	showDataTips="true">
		        	<mx:seriesFilters>
			           <mx:Array/>
			        </mx:seriesFilters>
		            <mx:horizontalAxis>
			            <mx:DateTimeAxis
			            	dataUnits="hours"
			            	parseFunction="dateParseFunction"/>
		    	    </mx:horizontalAxis>
		        	<mx:verticalAxis>
		            	<mx:LinearAxis baseAtZero="true"/>
		            </mx:verticalAxis>
			        <mx:series>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi1.noiseFloor.item}"
								displayName="Noise Floor">
				            <mx:lineStroke>
				                <mx:Stroke color="0x0000FF"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		        	</mx:series>
		        </mx:LineChart> 
         		<mx:Legend dataProvider="{wifi1noiseFloorChart}" width="100%" height="10%" fontSize="9" markerHeight="10" markerWidth="8"/>
			</mx:VBox>
		</mx:Canvas> 
		<mx:Canvas label="High Density Statistics Counters" width="100%" height="100%">
    		<mx:VBox width="100%" height="100%">
			    <mx:LineChart id="wifi1HighDensityCountChart" height="80%" width="100%"
		    	    paddingRight="0" paddingLeft="0" 
		    	    dataTipFunction="myDataTipFunctionNoFrame"
		        	showDataTips="true">
		        	<mx:seriesFilters>
			           <mx:Array/>
			        </mx:seriesFilters>
		            <mx:horizontalAxis>
			            <mx:DateTimeAxis
			            	dataUnits="hours"
			            	parseFunction="dateParseFunction"/>
		    	    </mx:horizontalAxis>
		        	<mx:verticalAxis>
		            	<mx:LinearAxis baseAtZero="true"/>
		            </mx:verticalAxis>
			        <mx:series>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi1.bandsteering.item}"
								displayName="Band Steering Suppress Count">
				            <mx:lineStroke>
				                <mx:Stroke color="0x0000FF"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi1.loadbalance.item}"
								displayName="Load Balance Suppress Count">
				            <mx:lineStroke>
				                <mx:Stroke color="0xFF0000"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi1.weaksnr.item}"
								displayName="Weak SNR Suppress Count">
				            <mx:lineStroke>
				                <mx:Stroke color="0x00FF00"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi1.safetynet.item}"
								displayName="Safety Net Answer Count">
				            <mx:lineStroke>
				                <mx:Stroke color="0xFFFF00"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi1.proberequest.item}"
								displayName="Probe Request Suppress Count">
				            <mx:lineStroke>
				                <mx:Stroke color="0x00FFFF"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi1.authrequest.item}"
								displayName="Auth Request Suppress Count">
				            <mx:lineStroke>
				                <mx:Stroke color="0xFF00FF"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		        	</mx:series>
		        </mx:LineChart> 
         		<mx:Legend dataProvider="{wifi1HighDensityCountChart}" width="100%" height="20%" fontSize="9" markerHeight="10" markerWidth="8" itemMouseOver="mv(event,wifi1HighDensityCountChart)" itemMouseOut="mo(event,wifi1HighDensityCountChart)"/>
			</mx:VBox>
		</mx:Canvas> 
		
        <mx:Canvas label="Transmitted Bit Rate Distribution" width="100%" id="wifi1txRateDis" height="100%">
    		
		</mx:Canvas> 
        <mx:Canvas label="Received Bit Rate Distribution" width="100%" height="100%" id="wifi1rxRateDis">
		</mx:Canvas>
        <mx:Canvas label="Bit Rate Success Distribution (%)" width="100%" height="100%" id="wifi1txRateSuccDis">
            <mx:VBox width="100%" height="100%">
			    <mx:LineChart id="wifi1rateSuccessDistributionChart" height="90%" width="100%"
		    	    paddingRight="0" paddingLeft="0" 
		    	    dataTipFunction="myDataTipFunctionForRateDis"
		        	showDataTips="true">
		        	<mx:seriesFilters>
			           <mx:Array/>
			        </mx:seriesFilters>
		            <mx:horizontalAxis>
			            <mx:DateTimeAxis
			            	dataUnits="hours"
			            	parseFunction="dateParseFunction"/>
		    	    </mx:horizontalAxis>
		        	<mx:verticalAxis>
		            	<mx:LinearAxis baseAtZero="true"/>
		            </mx:verticalAxis>
			        <mx:series>
		    	        <mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi1.txRateSuccDistribution.item}"
								displayName="Tx Rate Success">
				            <mx:lineStroke>
				                <mx:Stroke color="0x0000FF"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
						<mx:LineSeries yField="count" xField="date" dataProvider="{httpSvc.lastResult.report.interfaceInfo.wifi1.rxRateSuccDistribution.item}"
								displayName="Rx Rate Success">
				            <mx:lineStroke>
				                <mx:Stroke color="0x00FF00"/>
				            </mx:lineStroke>   
						</mx:LineSeries>
		        	</mx:series>
		        </mx:LineChart> 
         		<mx:Legend dataProvider="{wifi1rateSuccessDistributionChart}" width="100%" height="10%" fontSize="9" markerHeight="10" markerWidth="8" itemMouseOver="mv(event,wifi1rateSuccessDistributionChart)" itemMouseOut="mo(event,wifi1rateSuccessDistributionChart)"/>
			</mx:VBox>
		</mx:Canvas>
	</mx:Accordion>
	</mx:Panel>
</mx:Application>
