<?xml version="1.0"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="init()"
			paddingLeft="0" paddingTop="0" paddingRight="0" paddingBottom="0">

	<mx:HTTPService id="httpSvc"/>

	<mx:Script>
        <![CDATA[
			import flash.utils.Timer;
			import mx.controls.Alert;
			import flash.net.navigateToURL;
			import mx.charts.HitData;
			import mx.charts.events.ChartItemEvent;
			import mx.rpc.events.ResultEvent;
			
			private var initURL: String; 
			private var timeFinishedFlg: Boolean=true;
			
			public function init():void {
				if (Application.application.url.indexOf("monitor/reports")>=0){
					initURL = Application.application.url.substring(0, Application.application.url.indexOf("monitor/reports"));
				} else {
					initURL="";
				}
				httpSvc.url = initURL+ "reports.action?operation=summaryWidgetApUptimeData&key=" + new Date().time;
				httpSvc.send();				
				refreshTimer();
    	 	}

			public function refreshTimer():void {
				// refresh for 1 * 15*60 secs = 15 minutes
            	var myTimer:Timer = new Timer(900000, 1);            	
				myTimer.addEventListener("timer", refreshHandler);
				myTimer.start();
        	}

			public function refreshHandler(event:TimerEvent):void {
				if (timeFinishedFlg){
					httpSvc.url = initURL+"reports.action?operation=summaryWidgetApUptimeData&key=" + new Date().time;
					httpSvc.addEventListener("result", httpResult);
					timeFinishedFlg=false;
					httpSvc.send();
				}
        	}
        	
        	public function httpResult(event:ResultEvent):void {
        		timeFinishedFlg=true;
        	}
			
			public function hiveApUpPencentageDataDisplay(e:HitData):String {
		       	var s:String;
		        s = "<B>" + LineSeries(e.element).displayName + "</B>\n";
		        s += "<I>Date Time:</I>" + e.item.date + "\n";
		        s += "<I>Pencentage:</I>" + e.item.count + "%\n";
		        return s
		    }
			
            public function dateParseFunction(s:String):Date { 
			    var temp:Array = s.split(" ");    
			    var datepart:String = temp[0];    
			    var datearray:Array = datepart.split("-"); 
			    var timepart:String = temp[1];    
			    var timearray:Array = timepart.split(":");   
			    var intMon:int =datearray[1];
			    var intDay:int =datearray[2];
			    var intHour:int =timearray[0];
			    var intMin:int =timearray[1]; 
		     
		        var testDate:Date = new Date();
		    	var offhour:Number = testDate.getTimezoneOffset()/60 *-1;
		    	var offmin:Number = testDate.getTimezoneOffset()%60 *-1
		      	var newDate:Date = new Date(datearray[0],intMon-1,intDay,intHour+offhour,intMin+offmin);   
		      	
		      	return newDate;    
            }
        ]]>
    </mx:Script>
    <mx:Panel height="100%" width="100%" verticalGap="0" headerHeight="0" borderThicknessBottom="0" borderThicknessLeft="0" borderThicknessRight="0" borderThicknessTop="0" borderStyle="none">
	    <mx:LineChart height="100%" width="100%"
    	    paddingRight="5" paddingLeft="5" 
    	    dataTipFunction="hiveApUpPencentageDataDisplay"
        	showDataTips="true">
        	<mx:seriesFilters>
	           <mx:Array/>
	        </mx:seriesFilters>
            <mx:horizontalAxis>
	            <mx:DateTimeAxis
	            	dataUnits="hours" interval="1"
	            	parseFunction="dateParseFunction"/>
    	    </mx:horizontalAxis>

        	<mx:verticalAxis>
            	<mx:LinearAxis baseAtZero="true" maximum="100"/>
            </mx:verticalAxis>

	        <mx:series>
    	        <mx:LineSeries yField="count" xField="date" id="hiveApUptimeSeries" dataProvider="{httpSvc.lastResult.summary.hiveapUptime.item}"
						displayName="{httpSvc.lastResult.summary.apUptimeTitle}">
		            <mx:lineStroke>
		                <mx:Stroke color="0x0000FF"/>
		            </mx:lineStroke>   
				</mx:LineSeries>
        	</mx:series>
        </mx:LineChart> 
	</mx:Panel>
</mx:Application>
